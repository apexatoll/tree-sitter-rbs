================================================================================
Including a flat class
================================================================================

class Foo
  include Bar
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (class_name))))))

================================================================================
Including a flat class with type arguments
================================================================================

class Foo
  include Bar[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (class_name)
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Including a nested class
================================================================================

class Foo
  include Bar::Baz
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (class_name
            (namespace)))))))

================================================================================
Including a nested class with type arguments
================================================================================

class Foo
  include Bar::Baz[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (class_name
            (namespace))
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Including a flat interface
================================================================================

class Foo
  include _Bar
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (interface_name))))))

================================================================================
Including a flat interface with type arguments
================================================================================

class Foo
  include _Bar[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (interface_name)
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Including a nested interface
================================================================================

class Foo
  include Bar::_Baz
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (interface_name
            (namespace)))))))

================================================================================
Including a nested interface with type arguments
================================================================================

class Foo
  include Bar::_Baz[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (include_member
          (interface_name
            (namespace))
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Extending a flat class
================================================================================

class Foo
  extend Bar
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (class_name))))))

================================================================================
Extending a flat class with type arguments
================================================================================

class Foo
  extend Bar[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (class_name)
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Extending a nested class
================================================================================

class Foo
  extend Bar::Baz
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (class_name
            (namespace)))))))

================================================================================
Extending a nested class with type arguments
================================================================================

class Foo
  extend Bar::Baz[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (class_name
            (namespace))
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Extending a flat interface
================================================================================

class Foo
  extend _Bar
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (interface_name))))))

================================================================================
Extending a flat interface with type arguments
================================================================================

class Foo
  extend _Bar[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (interface_name)
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Extending a nested interface
================================================================================

class Foo
  extend Bar::_Baz
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (interface_name
            (namespace)))))))

================================================================================
Extending a nested interface with type arguments
================================================================================

class Foo
  extend Bar::_Baz[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (extend_member
          (interface_name
            (namespace))
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Prepending a flat class
================================================================================

class Foo
  prepend Bar
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (prepend_member
          (class_name))))))

================================================================================
Prepending a flat class with type arguments
================================================================================

class Foo
  prepend Bar[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (prepend_member
          (class_name)
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))

================================================================================
Prepending a nested class
================================================================================

class Foo
  prepend Bar::Baz
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (prepend_member
          (class_name
            (namespace)))))))

================================================================================
Prepending a nested class with type arguments
================================================================================

class Foo
  prepend Bar::Baz[T]
end

--------------------------------------------------------------------------------

(program
  (class_declaration
    (class_name)
    (members
      (member
        (prepend_member
          (class_name
            (namespace))
          (type_arguments
            (type
              (namespaceable_type
                (class_name)))))))))
