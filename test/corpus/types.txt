================================================================================
top
================================================================================

TEST: top

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
bot
================================================================================

TEST: bot

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
self
================================================================================

TEST: self

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
instance
================================================================================

TEST: instance

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
class
================================================================================
TEST: class
--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
nil
================================================================================

TEST: nil

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
bool
================================================================================

TEST: bool

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
void
================================================================================

TEST: void

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
untyped
================================================================================

TEST: untyped

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (builtin_type)))))

================================================================================
Empty double quoted string
================================================================================

TEST: ""

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (string_literal))))))

================================================================================
Double quoted string
================================================================================

TEST: "Hello world 12345"

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (string_literal))))))

================================================================================
Empty single quoted string
================================================================================

TEST: ''

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (string_literal))))))

================================================================================
Single quoted string
================================================================================

TEST: 'Hello world 12345'

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (string_literal))))))

================================================================================
Simple symbol
================================================================================

TEST: :hello_world

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (symbol_literal))))))

================================================================================
Delimited single quoted symbol
================================================================================

TEST: :'hello_world'

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (symbol_literal))))))

================================================================================
Delimited double quoted symbol
================================================================================

TEST: :"hello_world"

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (symbol_literal))))))

================================================================================
Integer
================================================================================

TEST: 999

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (integer_literal))))))

================================================================================
Integer with underscore
================================================================================

TEST: 1_000

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (integer_literal))))))

================================================================================
true
================================================================================

TEST: true

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (true_literal))))))

================================================================================
false
================================================================================

TEST: false

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (literal_type
          (false_literal))))))

================================================================================
Single union
================================================================================

TEST: bool | nil

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (operator_type
          (union_type
            (type
              (builtin_type))
            (type
              (builtin_type))))))))

================================================================================
Multiple unions
================================================================================

TEST: bool | instance | nil

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (operator_type
          (union_type
            (type
              (builtin_type))
            (type
              (operator_type
                (union_type
                  (type
                    (builtin_type))
                  (type
                    (builtin_type)))))))))))

================================================================================
Single intersection
================================================================================

TEST: bool & nil

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (operator_type
          (intersection_type
            (type
              (builtin_type))
            (type
              (builtin_type))))))))

================================================================================
Multiple intersections
================================================================================

TEST: bool & instance & nil

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (operator_type
          (intersection_type
            (type
              (builtin_type))
            (type
              (operator_type
                (intersection_type
                  (type
                    (builtin_type))
                  (type
                    (builtin_type)))))))))))

================================================================================
Optional type
================================================================================

TEST: bool?

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (operator_type
          (optional_type
            (type
              (builtin_type))))))))

================================================================================
Class name type
================================================================================

TEST: Foobar

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (namespaceable_type
          (class_name))))))

================================================================================
Nested class name type
================================================================================

TEST: Foobar::Baz

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (namespaceable_type
          (class_name
            (namespace)))))))

================================================================================
Interface name type
================================================================================

TEST: _Foobar

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (namespaceable_type
          (interface_name))))))

================================================================================
Nested interface name type
================================================================================

TEST: Foobar::_Baz

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (namespaceable_type
          (interface_name
            (namespace)))))))

================================================================================
Alias name type
================================================================================

TEST: foobar

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (namespaceable_type
          (alias_name))))))

================================================================================
Nested alias name type
================================================================================

TEST: Foobar::baz

--------------------------------------------------------------------------------

(program
  (declaration
    (constant_declaration
      (constant)
      (type
        (namespaceable_type
          (alias_name
            (namespace)))))))
